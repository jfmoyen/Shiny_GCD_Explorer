runApp()
tab <- read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab")
tab<- read_table2("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12)
tab<- read_table2("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12,
sep=" ")
tab<- read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12,)
tab<- read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12)
tab<- read_delim("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12,delim=" ")
tab
library(readr)
diorite03TX_1 <- read_table2("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12)
View(diorite03TX_1)
read_delim("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12,delim=" ")
read_delim("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",
skip = 12,delim=" ",trim_ws=T)
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12)
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12,guess_max = 6000)
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12,col_types = "d")
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12,col_types = rep("d",14) )
vignette("readr")
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12,col_types = list(  .default = col_double()) )
dio <- read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.tab",skip=12,col_types = list(  .default = col_double()) )
dio
dio %<>% select(-X14)
library(magrittr)
dio %<>% select(-X14)
dio
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`Bi(HGP)`)
dio %>% ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`Bi(HGP)`))
dio <-
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.phm",skip=12,col_types = list(  .default = col_double()) )
dio
dio <-
read_table("U:/Geol Soft/Perple_X_6.9.1/diorite/diorite03TX_1.phm",skip=12,
col_types = list( Name=col_character(), .default = col_double())
)
dio
names(dio)
dio %<>% select(-X57)
dio %>% ggplot()+
geom_contour(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`Bi(HGP)`))
dio %>%
filter(Name=="Bio(HGP)") %>%
ggplot()+
geom_contour(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`wt,%`))
dio %>%
filter(Name=="Bio(HGP)")
dio$Name %>% unique
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`wt,%`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`wt,%`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`wt,%`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`T(K)`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`S,J/K/mol`,z=`T(K)`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`rho,kg/m3`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`S,J/K/mol`))
?geom_contour
geom_raster
?geom_raster
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_tile(aes(x=`X(C1)`,y=`T(K)`,fill=`S,J/K/mol`))
dio %>%
filter(Name=="Bi(HGP)") %>%
ggplot()+
geom_tile(aes(x=`X(C1)`,fill=`T(K)`,y=`S,J/K/mol`))
dio %>%
filter(Name=="melt(HGP)") %>%
ggplot()+
geom_contour(aes(x=`X(C1)`,y=`T(K)`,z=`wt,%`))
dio %>%
filter(Name=="melt(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`wt,%`))
dio %>%
filter(Name=="melt(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`,y=`T(K)`,z=`wt,%`))+
labs(fill="Melt%")
?labs
dio %>%
filter(Name=="melt(HGP)") %>%
ggplot()+
geom_contour_filled(aes(x=`X(C1)`*3+3,y=`T(K)`,z=`wt,%`))+
labs(fill="Melt%")+xlab("Wt.% H2O")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinywidgets")
install.packages("shinyWidgets")
?pickerInput
library(shinyWidgets)
?pickerInput
??vidridis
runApp()
runApp()
runApp()
runApp()
runApp()
?aes_q
runApp()
runApp()
runApp('U:/Recherche/R_development/WR_data_explorer')
runApp('U:/Recherche/R_development/WR_data_explorer')
?parse_expr
runApp('U:/Recherche/R_development/WR_data_explorer')
runApp('U:/Recherche/R_development/WR_data_explorer')
runApp('U:/Recherche/R_development/WR_data_explorer')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
calcCoreReactive(the_data,input$x)
input$x
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?scale_color_discrete
runApp()
runApp()
runApp()
retval
input$col_literal
input$colorby
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$pch_literal
input$scaleby
input$scaleby %in% continuous
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("binaryPlot.R")
source('U:/Recherche/R_development/WR_data_explorer/binaryPlot.R')
runApp()
continuous
.GlobalEnv::continuous
get(continuous,.GlobalEnv)
runApp()
the_data
the_name
?source
runApp()
continous
the_data
the_name
continuous
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("reactlog")
runApp()
reactiveConsole(FALSE)
runApp()
runApp()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(shiny)
this_is_a_long_list_ot_items <- c("a","b","c","g","foo","bar")
this_is_another_long_list_ot_items <- c("r","e","v","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(this_is_a_long_list_ot_items,this_is_another_long_list_ot_items)),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
paste("you have selected choice: ",input$choice)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
this_is_a_long_list_ot_items <- c("a","b","c","g","foo","bar")
this_is_another_long_list_ot_items <- c("r","e","v","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(this_is_a_long_list_ot_items,this_is_another_long_list_ot_items)),
conditionalPanel(
condition = TRUE, ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
)
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
paste("you have selected",
ifthenelse(is.null(input$number),"",input$number),
input$choice)
})
}
shinyApp(ui = ui, server = server)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = TRUE, ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = "input.choice in numerable", ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
numerable
paste(paste(paste('"',numerable,'"',sep=""),collapse=","),".indexOf(input.choice) > -1")))
paste(paste(paste('"',numerable,'"',sep=""),collapse=","),".indexOf(input.choice) > -1"))
paste('"',numerable,'"')
paste('"',numerable,'"',sep='')
paste(paste('"',numerable,'"',sep=''),collapse=',')
paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice),sep='')
paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='')
paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='')
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='') , ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='')
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = '["apple","orange","banana","quux","baz","bob"].includes(input.choice)' , ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
library(shiny)
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = paste('[',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='') , ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
str_c('"',numerable,'"')
str_c('"',numerable,'"') %>% str_flatten(collapse = ',')
charvec<-numerable
the_conds<-str_c('"',charvec,'"') %>% str_flatten(collapse = ',')
the_conds
paste('[',the_conds,'].includes(input.',control,')',sep='')
control<-"choice"
paste('[',the_conds,'].includes(input.',control,')',sep='')
collective <- c("happiness","love","peace","time","foo","bar")
numerable <- c("apple","orange","banana","quux","baz","bob")
ui <- fluidPage(
selectInput("choice","choose one",choices=c(collective,numerable)),
conditionalPanel(
condition = paste('![',paste(paste('"',numerable,'"',sep=''),collapse=','),'].includes(input.choice)',sep='') , ## This is the condition I need to write !
numericInput("number",
"How many?",
value=3)
),
textOutput("result")
)
server <- function(input, output, session) {
output$result <- renderText({
if(is.null(input$number)){
paste("You want some", input$choice)
}else{
paste("you want",input$number,input$choice)
}
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df=(tibble(x=runif(50),y=runif(50)))
df
df %>% ggplot() + geom_point(aes(x,y))
fct
fct <- cut(runif(50),c(0.25,0.8) )
fct
fct <- cut(runif(50),c(0,0.25,0.8,1) )
fct
df %>% ggplot() + geom_point(aes(x,y)) + facet_wrap(fct)
p
df %>% ggplot() + geom_point(aes(x,y)) + facet_wrap(fct) -> pp
pp
pp + NULL
?return
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pp
df %>% ggplot() + geom_point(aes(x,y),color=NULL)
df %>% ggplot() + geom_point(aes(x,y,color=NULL))
df %>% ggplot() + geom_point(aes(x,y,shape=NULL))
df %>% ggplot() + geom_point(aes(x,y,color="red"))
df %>% ggplot() + geom_point(aes(x,y,color="blue"))
df %>% ggplot() + geom_point(aes(x,y,color="blue"))+scale_color_identity()
df %>% ggplot() + geom_point(aes(x,y,color=3))+scale_color_identity()
df %>% ggplot() + geom_point(aes(x,y,color="3"))+scale_color_identity()
df %>% ggplot() + geom_point(aes(x,y,color="5"))+scale_color_identity()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
query
runApp()
runApp()
usethis::create_github_token()
install.packages("usethis")
usethis::create_github_token()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
